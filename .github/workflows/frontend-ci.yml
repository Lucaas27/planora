name: Frontend CI

on:
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"
          cache-dependency-path: "client/package-lock.json"

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Check code formatting with Biome
        id: formatting
        working-directory: ./client
        run: |
          echo "🔍 Checking code formatting with Biome..."
          npm run format:check
          echo "✅ All files are properly formatted!"

      - name: Lint with Biome
        id: linting
        working-directory: ./client
        run: |
          echo "🔍 Running Biome linter..."
          npm run lint
          echo "✅ No linting issues found!"

      - name: Type check
        id: typecheck
        working-directory: ./client
        run: |
          echo "🔍 Running TypeScript type checking..."
          npx tsc --noEmit
          echo "✅ No type errors found!"

      - name: Check for outdated dependencies
        run: |
          echo "📦 Checking for outdated dependencies..."
          npm outdated --prefix client || true
          echo "ℹ️  Dependency check complete!"

      - name: Build
        working-directory: ./client
        run: npm run build

      - name: Test with coverage
        id: test
        working-directory: ./client
        run: npm run test:coverage

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: client/coverage/

      - name: Create coverage summary
        uses: davelosert/vitest-coverage-report-action@v2
        if: github.event_name == 'pull_request'
        with:
          json-summary-path: 'client/coverage/coverage-summary.json'
          json-final-path: 'client/coverage/coverage-final.json'
          vite-config-path: 'client/vitest.config.ts'

      - name: Deploy coverage to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: client/coverage
          destination_dir: coverage/frontend
          keep_files: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: client/dist/

      - name: Code Quality Summary
        if: always()
        run: |
          echo "## 📊 Code Quality Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend (React + TypeScript)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🎨 Code Formatting | ${{ steps.formatting.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Linting | ${{ steps.linting.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🏗️ Type Checking | ${{ steps.typecheck.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Tests & Coverage | ${{ steps.test.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "� **Coverage Report:** [View Frontend Coverage](https://lucaas27.github.io/planora/coverage/frontend)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "�🛠️ **Tools Used:** Biome v2.0.6, TypeScript, Vitest, npm audit" >> $GITHUB_STEP_SUMMARY
