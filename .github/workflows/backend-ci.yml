name: Backend CI

on:
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: "9.x"

jobs:
  build-and-test:
    name: Build & Test Backend
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: "**/packages.lock.json"

      - name: Restore dependencies
        run: dotnet restore --locked-mode

      - name: Check code formatting
        run: dotnet format --verify-no-changes --verbosity diagnostic

      - name: Build project
        run: dotnet build --configuration Release --no-restore --verbosity normal /p:RunAnalyzersDuringBuild=true /p:TreatWarningsAsErrors=false

      - name: Run tests with coverage
        run: dotnet test --configuration Release --no-restore --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage"

      - name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
        with:
          reports: "**/*.cobertura.xml"
          targetdir: "${{ github.workspace }}/coverage-report"
          reporttypes: "Cobertura;MarkdownSummaryGithub;Html"

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: "${{ github.workspace }}/coverage-report/Cobertura.xml"

      - name: Create code coverage summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "**/**/Cobertura.xml"
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "60 80"

      - name: Add coverage PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
          header: code-coverage

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ github.workspace }}/**/TestResults/**/*

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2.16.1
        if: always()
        with:
          trx_files: "${{ github.workspace }}/**/*.trx"

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: ${{ github.workspace }}/coverage-report

      - name: Deploy coverage to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ github.workspace }}/coverage-report
          destination_dir: coverage/backend
          keep_files: true
